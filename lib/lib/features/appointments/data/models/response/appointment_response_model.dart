import 'dart:convert';
import 'package:json_annotation/json_annotation.dart';
import 'package:myco_flutter/features/appointments/domain/entities/appointment_entities_model.dart';

part 'appointment_response_model.g.dart'; // This file will be generated by build_runner

AppointmentResponseModel appointmentResponseModelFromJson(String str) =>
    AppointmentResponseModel.fromJson(json.decode(str));

@JsonSerializable()
class AppointmentResponseModel {
  @JsonKey(name: 'status')
  final String? status;
  @JsonKey(name: 'message')
  final String? message;
  @JsonKey(name: 'my_appointments')
  final List<MyAppointmentModel>? myAppointments;

  AppointmentResponseModel({this.status, this.message, this.myAppointments});

  factory AppointmentResponseModel.fromJson(Map<String, dynamic> json) =>
      _$AppointmentResponseModelFromJson(json);

  Map<String, dynamic> toJson() => _$AppointmentResponseModelToJson(this);

  AppointmentEntityModel toEntity() => AppointmentEntityModel(
    status: status,
    message: message,
    myAppointments: myAppointments?.map((e) => e.toEntity()).toList(),
  );
}

@JsonSerializable()
class MyAppointmentModel {
  @JsonKey(name: 'appointment_id')
  final String? appointmentId;
  @JsonKey(name: 'user_id')
  final String? userId;
  @JsonKey(name: 'user_full_name')
  final String? userFullName;
  @JsonKey(name: 'user_mobile')
  final String? userMobile;
  @JsonKey(name: 'branch_name')
  final String? branchName;
  @JsonKey(name: 'department_name')
  final String? departmentName;
  @JsonKey(name: 'user_designation')
  final String? userDesignation;
  @JsonKey(name: 'user_profile_pic')
  final String? userProfilePic;
  @JsonKey(name: 'short_name')
  final String? shortName;
  @JsonKey(name: 'appointment_place')
  final String? appointmentPlace;
  @JsonKey(name: 'appointment_agenda')
  final String? appointmentAgenda;
  @JsonKey(name: 'appointment_datetime')
  final String? appointmentDatetime;
  @JsonKey(name: 'appointment_created_date')
  final String? appointmentCreatedDate;
  @JsonKey(name: 'appointment_by_user_id')
  final String? appointmentByUserId;
  @JsonKey(name: 'appointment_for_user_id')
  final String? appointmentForUserId;
  @JsonKey(name: 'appointment_reject_reason')
  final String? appointmentRejectReason;
  @JsonKey(name: 'appointment_status_view')
  final String? appointmentStatusView;
  @JsonKey(name: 'appointment_status')
  final String? appointmentStatus;

  MyAppointmentModel({
    this.appointmentId,
    this.userId,
    this.userFullName,
    this.userMobile,
    this.branchName,
    this.departmentName,
    this.userDesignation,
    this.userProfilePic,
    this.shortName,
    this.appointmentPlace,
    this.appointmentAgenda,
    this.appointmentDatetime,
    this.appointmentCreatedDate,
    this.appointmentByUserId,
    this.appointmentForUserId,
    this.appointmentRejectReason,
    this.appointmentStatusView,
    this.appointmentStatus,
  });

  factory MyAppointmentModel.fromJson(Map<String, dynamic> json) =>
      _$MyAppointmentModelFromJson(json);

  Map<String, dynamic> toJson() => _$MyAppointmentModelToJson(this);

  MyAppointmentEntity toEntity() => MyAppointmentEntity(
    appointmentId: appointmentId,
    userId: userId,
    userFullName: userFullName,
    userMobile: userMobile,
    branchName: branchName,
    departmentName: departmentName,
    userDesignation: userDesignation,
    userProfilePic: userProfilePic,
    shortName: shortName,
    appointmentPlace: appointmentPlace,
    appointmentAgenda: appointmentAgenda,
    appointmentDatetime: appointmentDatetime,
    appointmentCreatedDate: appointmentCreatedDate,
    appointmentByUserId: appointmentByUserId,
    appointmentForUserId: appointmentForUserId,
    appointmentRejectReason: appointmentRejectReason,
    appointmentStatusView: appointmentStatusView,
    appointmentStatus: appointmentStatus,
  );
}
